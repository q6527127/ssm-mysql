#tomcat 端口 访问项目名
server.port=8080
server.context-path=/test
#mysql
spring.datasource.url=jdbc:mysql://localhost:3306/test?useSSL=true
spring.datasource.username=test
spring.datasource.password=111111
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.jpa.database = test

# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=111111
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0

#Mybatis扫描(配置xml模式使用)     
mybatis.mapper-locations=classpath*:/com/example/mapper/*.xml

#起别名。可省略写mybatis的xml中的resultType的全路径
mybatis.type-aliases-package=com.example.pojo

# ftl
spring.mvc.view.prefix=classpath:/templates/
spring.mvc.view.suffix=.ftl

#################################################日志####################################################  
#com.mycompany.mavenspringboot.controller 日志 WARN级别输出  
logging.level.com.example.controller=DEBUG
#com.mycompany.mavenspringboot.mapper sql日志 DEBUG级别输出  
logging.level.com.example.dao=DEBUG
logging.file=logs/spring-boot-logging.log
logging.pattern.console=%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger- %msg%n  
logging.pattern.file=%d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger- %msg%n 


